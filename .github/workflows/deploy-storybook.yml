name: Deploy Storybook

# Trigger this workflow when pushing to master/main branch
# Only run when UI package files change to avoid unnecessary deployments
on:
  push:
    branches: [master, main]
    paths:
      - 'packages/ui/**'
      - '.github/workflows/deploy-storybook.yml'

# Allow only one concurrent deployment to avoid conflicts
concurrency:
  group: 'pages'
  cancel-in-progress: true

# Required permissions for deploying to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build Storybook
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup pnpm package manager
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      # Step 3: Setup Node.js with caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      # Step 4: Configure GitHub Pages settings
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Step 5: Install all dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Step 6: Build Storybook static site
      - name: Build Storybook
        run: pnpm --filter @devlaunch/ui build-storybook

      # Step 7: Upload the built Storybook as a Pages artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './packages/ui/storybook-static'

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build

    # Deployment environment configuration
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Step 1: Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Step 2: Post-deployment notification with the URL
      - name: Post-deployment notification
        run: |
          echo "âœ… Storybook deployed successfully!"
          echo "ðŸ”— URL: ${{ steps.deployment.outputs.page_url }}"
